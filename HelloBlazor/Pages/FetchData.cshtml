@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

<h2 class="code-snippet-header">Code Snippet</h2>

<code><pre>@("@functions {\n"+
    "\tWeatherForecast[] forecasts;\n"+
    "\n"+
    "\tprotected override async Task OnInitAsync()\n"+
    "\t{\n"+
        "\t\tforecasts = await Http.GetJsonAsync<WeatherForecast[]>(\"sample-data/weather.json\");\n"+
    "\t}\n"+
    "\n"+
    "\tclass WeatherForecast\n"+
    "\t{\n"+
        "\t\tpublic DateTime Date { get; set; }\n"+
        "\t\tpublic int TemperatureC { get; set; }\n"+
        "\t\tpublic int TemperatureF { get; set; }\n"+
        "\t\tpublic string Summary { get; set; }\n"+
"\t}\n"+
"}")
</pre></code>

@functions {
    WeatherForecast[] forecasts;

    protected override async Task OnInitAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string Summary { get; set; }
    }
}
